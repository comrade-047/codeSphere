# for deployment on EC2
services:
  # 1. The Redis Server
  # This will be the central queue for your entire application.
  redis:
    image: redis:latest
    container_name: judge-redis
    # This command starts Redis and sets a mandatory password.
    # IMPORTANT: Replace 'YOUR_STRONG_PASSWORD' in your .env file.
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      # Exposes Redis to the public internet via your EC2's Elastic IP.
      # The AWS firewall (Security Group) will restrict access to only your server.
      - "0.0.0.0:6379:6379"
    restart: always
    volumes:
      - redis-data:/data # Persists Redis data across restarts.
    networks:
      - judge-net

  # 2. The Judge Worker
  # This service processes jobs from the Redis queue.
  judge-worker:
    # This tells docker-compose to build the image from the Dockerfile
    # in the ./judge-worker directory on your EC2 instance.
    build:
      context: ./judge-worker
      dockerfile: Dockerfile
    container_name: judge-worker
    # The .env file provides the environment variables.
    env_file:
      - ./judge-worker/.env
    # We override REDIS_HOST here to use the service name from this file.
    environment:
      - REDIS_HOST=redis
    depends_on:
      - redis
    restart: always
    networks:
      - judge-net

# Define the network for the services to communicate with each other.
networks:
  judge-net:
    driver: bridge

# Define the volume for persistent Redis data.
volumes:
  redis-data:



# docker-compose.yml for Local Development 


# services:
#   # 1. The Redis Server (for local use)
#   redis:
#     image: redis:latest
#     container_name: judge-redis-local
#     ports:
#       # Binds the port only to localhost on your machine for security.
#       - "127.0.0.1:6379:6379"
#     restart: always
#     volumes:
#       - redis-data-local:/data # Persists Redis data locally.
#     networks:
#       - judge-net-local

#   # 2. The Judge Worker
#   judge-worker:
#     build:
#       context: ./judge-worker
#       dockerfile: Dockerfile
#     container_name: judge-worker-local
#     env_file:
#       - ./judge-worker/.env
#     # This environment variable tells the worker to connect to the 'redis' service
#     # defined in this file, not to an external IP.
#     environment:
#       - REDIS_HOST=redis
#     volumes:
#       # This is crucial for local development. It syncs your local code
#       # with the code inside the container for live reloading.
#       - ./judge-worker:/app
#       - /app/node_modules
#     depends_on:
#       - redis
#     restart: always
#     networks:
#       - judge-net-local

# # Define the network for the services to communicate with each other.
# networks:
#   judge-net-local:
#     driver: bridge

# # Define the volume for persistent Redis data.
# volumes:
#   redis-data-local:
